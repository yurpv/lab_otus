---

- name: Create User Nginx_exporter
  user:
    name: nginx_exporter
    create_home: no
    shell: /bin/false

- name: Create directories for Nginx_exporter
  file:
    path: "{{ item }}"
    state: directory
    owner: nginx_exporter
    group: nginx_exporter
  loop:
    - '/tmp/nginx_exporter'

- name: Download And Unzipped Nginx_exporter
  unarchive:
    src: https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_exporter_version }}/nginx-prometheus-exporter_{{ nginx_exporter_version }}.linux-arm64.tar.gz
    dest: /tmp/node_exporter
    creates: /tmp/node_exporter/nginx-prometheus-exporter-{{ nginx_exporter_version }}.linux-arm64
    remote_src: yes

- name: Copy Bin Files From Unzipped to Nginx_exporter
  copy:
    src: /tmp/nginx_exporter/nginx-prometheus-exporter_{{ nginx_exporter_version }}.linux-arm64/{{ item }}
    dest: /usr/local/bin/
    remote_src: yes
    mode: preserve
    owner: nginx_exporter
    group: nginx_exporter
  loop: [ 'nginx-prometheus-exporter' ]

- name: Remove nginx_exporter archive files
  file:
    path: /tmp/nginx_exporter
    state: absent

- name: Copy File for Nginx_exporter Systemd
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'templates/nginx_exporter.service.j2', dest: '/etc/systemd/system/nginx_exporter.service'}
    - { src: 'templates/stats.conf.j2', dest: '/etc/nginx/sites-available/stats.conf'}

- name: Create a symbolic link
  file:
    src: /etc/nginx/sites-available/stats.conf.j2
    dest: /etc/nginx/sites-enabled/stats.conf
    state: link

- name: Create File for Nginx_exporter Systemd
  template:
    src=templates/nginx_exporter.service.j2
    dest=/etc/systemd/system/nginx_exporter.service
  notify:
    - systemd reload

- name: Nginx_exporter systemd
  systemd:
    name: node_exporter
    enabled: yes
    state: started
